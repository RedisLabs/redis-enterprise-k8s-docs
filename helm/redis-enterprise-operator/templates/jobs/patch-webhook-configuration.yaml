{{- if not .Values.admission.setCABundle }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-enterprise-admission-configuration
  labels:
    app: redis-enterprise
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
    {{- include "redis-enterprise-operator.annotations" . | nindent 4}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: redis-enterprise-admission-configuration
  labels:
    app: redis-enterprise
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
    {{- include "redis-enterprise-operator.annotations" . | nindent 4}}
rules:
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations"]
  verbs: ["patch", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: redis-enterprise-admission-configuration
  labels:
    app: redis-enterprise
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
    {{- include "redis-enterprise-operator.annotations" . | nindent 4}}
subjects:
- kind: ServiceAccount
  name: redis-enterprise-admission-configuration
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: redis-enterprise-admission-configuration
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: redis-enterprise-admission-configuration
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
    {{- include "redis-enterprise-operator.annotations" . | nindent 4}}
  labels:
    app: redis-enterprise
rules:
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "get"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: redis-enterprise-admission-configuration
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
    {{- include "redis-enterprise-operator.annotations" . | nindent 4}}
  labels:
    app: redis-enterprise
subjects:
- kind: ServiceAccount
  name: redis-enterprise-admission-configuration
roleRef:
  kind: Role
  name: redis-enterprise-admission-configuration
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-webhook-configuration
  labels:
    app: redis-enterprise
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
    {{- include "redis-enterprise-operator.annotations" . | nindent 4}}
spec:
  backoffLimit: 6
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app: redis-enterprise
    spec:
      containers:
        - name: patch-admission-webhook-configuration
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
          image: {{ include "redis-enterprise-operator.operator.image" . | printf "%s" | trim }}
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            seccompProfile:
              type: "RuntimeDefault"
          command:
            - crd-installer
          args:
            - -action=patchWebhook
            - -webhookName=redis-enterprise-admission-{{ .Release.Namespace }}
            - -namespace={{ .Release.Namespace }}
      restartPolicy: OnFailure
      serviceAccountName: redis-enterprise-admission-configuration
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
{{- end }}